package GUI;

import Controllers.DatesController;
import Entities.AppReservation;
import Entities.Driver;
import Entities.Ride;
import Entities.Vehicle;
import Enums.VehicleType;
import Utils.LoggedIn;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;

public class DriverRideHistoryWindow {
    private JPanel mainPanel;
    private JScrollPane tablePane;
    private JTable ridesTable;
    public static DefaultTableModel tableModel;
    public static JFrame ridesWindow;

    public DriverRideHistoryWindow() {
        createTable();

        ridesWindow = new JFrame();
        ridesWindow.setTitle("Moje voznje");
        ridesWindow.setContentPane(this.mainPanel);
        ridesWindow.setLocationRelativeTo(null);
        ridesWindow.pack();

    }

    private void createTable() {
        String[] header = new String[]{"Broj voznje:", "Datum i vreme narucivanja:", "Adresa polaska:", "Adresa dolaska:", "Broj kilometara:", "Trajanje (U minutima):", "Cena:", "Status:", "Korisnik",
                "Ocena:", "Napomena:"};
        Object[][] contetnt = new Object[((Driver) LoggedIn.getLoggedUser()).getDriverRides().size()][header.length];


        for (int i = 0; i < ((Driver) LoggedIn.getLoggedUser()).getDriverRides().size(); i++) {
            Ride ride = ((Driver) LoggedIn.getLoggedUser()).getDriverRides().get(i);

            contetnt[i][0] = ride.getRideNumber();
            contetnt[i][1] = DatesController.dateAndTimeToStr(ride.getDateAndTime());
            contetnt[i][2] = ride.getStartAddress();
            contetnt[i][3] = ride.getArrivalAddress();
            contetnt[i][4] = ride.getNumberOfKm() + "km";
            contetnt[i][5] = ride.getDuration();
            contetnt[i][6] = ride.getPrice();
            contetnt[i][7] = ride.getStatus();
            contetnt[i][8] = ride.getUser().getUsername();
            contetnt[i][9] = ride.getRideRating();
            if (ride instanceof AppReservation) {
                contetnt[i][10] = ((AppReservation) ride).getNote();
            } else {
                contetnt[i][10] = "-";
            }
        }

        tableModel = new DefaultTableModel(contetnt, header);
        ridesTable = new JTable(tableModel);


        ridesTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ridesTable.setDefaultEditor(Object.class, null);
        ridesTable.getTableHeader().setReorderingAllowed(false);
        ridesTable.setAutoCreateRowSorter(true);

        tablePane = new JScrollPane(ridesTable);
        mainPanel.add(tablePane, BorderLayout.CENTER);

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.setPreferredSize(new Dimension(1200, 600));
        mainPanel.setRequestFocusEnabled(false);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
