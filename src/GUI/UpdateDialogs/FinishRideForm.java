package GUI.UpdateDialogs;

import Controllers.AuctionController;
import Controllers.RideController;
import Controllers.UsersController;
import Entities.Driver;
import Entities.Ride;
import Exceptions.SaveExcption;
import Repositories.AuctionFileRepository;
import Repositories.RidesFileRepository;
import Repositories.UsersFileRepository;
import Search.SearchAlgorithms;
import Utils.LoggedIn;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.text.ParseException;

public class FinishRideForm {
    private JPanel mainPanel;
    private JTextField numOfKmField;
    private JLabel numOfKmLabel;
    private JLabel durationLabel;
    private JTextField durationField;
    private JButton finishBtn;
    public static JFrame finishWindow;
    private Ride ride;

    public FinishRideForm(Ride ride) {
        this.ride = ride;

        finishWindow = new JFrame();
        finishWindow.setContentPane(this.mainPanel);
        finishWindow.setLocationRelativeTo(null);
        finishWindow.setTitle("Zavrsetak voznje");
        finishWindow.pack();
        initAddActions();

    }

    private void initAddActions() {
        this.finishBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                finishRide();
                finishWindow.dispose();
                finishWindow.setVisible(false);
            }
        });
    }

    private void finishRide() {
        if (validation()) {
            Driver driver = SearchAlgorithms.getDriver(LoggedIn.getService().getUsers(), LoggedIn.getLoggedUser().getUsername());
            RideController.finishAppRide(this.ride, Double.parseDouble(this.numOfKmField.getText().trim()), Double.parseDouble(this.durationField.getText().trim()),driver);
            UsersController.calculateDriverSalary(driver);
            try {
                RidesFileRepository.writeAllRides(LoggedIn.getService().getRides());
                UsersFileRepository.writeAllUsers(LoggedIn.getService().getUsers());
                JOptionPane.showMessageDialog(null, "Uspesno sacuvani podaci", "Cuvanje podataka", JOptionPane.INFORMATION_MESSAGE);
            } catch (SaveExcption e) {
                JOptionPane.showMessageDialog(null, "Greska prilikom pisanja u fajl", "Greska", JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    private boolean validation() {
        boolean isValid = true;
        String message = "Molimo vas ispravite sledece greske prilkom unosa:\n";
        if (this.numOfKmField.getText().trim().equals("")) {
            message += "Morate uneti broj kilometara \n";
            isValid = false;
        }
        try {
            Integer.parseInt(this.numOfKmField.getText().trim());
        } catch (NumberFormatException e) {
            message += "Broj km mora biti broj";
            isValid = false;
        }
        if (this.durationField.getText().trim().equals("")) {
            message += "Morate uneti broj trejanje \n";
            isValid = false;
        }

        if (isValid == false) {
            JOptionPane.showMessageDialog(null, message, "Neispravni podaci", JOptionPane.WARNING_MESSAGE);
        }
        return isValid;
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setPreferredSize(new Dimension(480, 150));
        numOfKmLabel = new JLabel();
        numOfKmLabel.setText("Uneste broj predjenih km:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(numOfKmLabel, gbc);
        numOfKmField = new JTextField();
        numOfKmField.setPreferredSize(new Dimension(200, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 10, 0, 0);
        mainPanel.add(numOfKmField, gbc);
        durationLabel = new JLabel();
        durationLabel.setText("Unesite trajanje voznje (H:mm:ss):");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(durationLabel, gbc);
        durationField = new JTextField();
        durationField.setPreferredSize(new Dimension(200, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 10, 0, 0);
        mainPanel.add(durationField, gbc);
        finishBtn = new JButton();
        finishBtn.setText("zavrsi");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 10, 0, 0);
        mainPanel.add(finishBtn, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
