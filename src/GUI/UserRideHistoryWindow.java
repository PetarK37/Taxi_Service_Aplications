package GUI;

import Controllers.DatesController;
import Entities.*;
import Enums.ReservationStatus;
import GUI.UpdateDialogs.RateRideForm;
import GUI.UpdateDialogs.VehicleUpdateAndAddForm;
import Search.SearchAlgorithms;
import Utils.LoggedIn;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class UserRideHistoryWindow {

    private JPanel mainPanel;
    private JPanel buttonsPanel;
    private JButton rateBtn;
    private JScrollPane tablePane;
    private JTable ridesTable;
    public static DefaultTableModel tableModel;
    public static JFrame ridesWindow;

    public UserRideHistoryWindow() {
        createTable();
        initActions();

        ridesWindow = new JFrame();
        ridesWindow.setTitle("Moje voznje");
        ridesWindow.setContentPane(this.mainPanel);
        ridesWindow.setLocationRelativeTo(null);
        ridesWindow.pack();

    }

    private void initActions() {
       this.rateBtn.addActionListener(new ActionListener() {
           @Override
           public void actionPerformed(ActionEvent e) {
               int row = ridesTable.getSelectedRow();

               if (row == -1) {
                   JOptionPane.showMessageDialog(null, "Morate odabrati red u tabeli.", "Greska", JOptionPane.WARNING_MESSAGE);
               } else {
                   row = ridesTable.convertRowIndexToModel(row);
                   int rideID = Integer.parseInt(tableModel.getValueAt(row, 0).toString());
                   Ride ride = SearchAlgorithms.getRide(LoggedIn.getService().getRides(), rideID);

                   if (ride.getStatus() == ReservationStatus.FINISHED && ride.getRideRating() == 0){
                       initRatingForm(ride);
                   }else{
                       JOptionPane.showMessageDialog(null, "Nije moguce oceniti izabranu voznju", "Greska", JOptionPane.WARNING_MESSAGE);
                   }
               }
           }
       });
    }



    private void createTable() {
        String[] header = new String[]{"Broj voznje:", "Datum i vreme narucivanja:", "Adresa polaska:", "Adresa dolaska:", "Broj kilometara:", "Trajanje (U minutima):", "Cena:", "Status:", "Vozac",
                "Ocena:", "Napomena:"};
        Object[][] content = new Object[((User) LoggedIn.getLoggedUser()).getUserRides().size()][header.length];


        for (int i = 0; i < ((User) LoggedIn.getLoggedUser()).getUserRides().size(); i++) {
            Ride ride = ((User) LoggedIn.getLoggedUser()).getUserRides().get(i);

            content[i][0] = ride.getRideNumber();
            content[i][1] = DatesController.dateAndTimeToStr(ride.getDateAndTime());
            content[i][2] = ride.getStartAddress();
            content[i][3] = ride.getArrivalAddress();
            content[i][4] = ride.getNumberOfKm() + "km";
            content[i][5] = ride.getDuration();
            content[i][6] = ride.getPrice();
            content[i][7] = ride.getStatus();
            content[i][8] = ride.getDriver() == null ? "-" : ride.getDriver().getUsername();
            content[i][9] = ride.getRideRating();
            if (ride instanceof AppReservation) {
                content[i][10] = ((AppReservation) ride).getNote();
            } else {
                content[i][10] = "-";
            }
        }

        tableModel = new DefaultTableModel(content, header);
        ridesTable = new JTable(tableModel);

        ridesTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ridesTable.setDefaultEditor(Object.class, null);
        ridesTable.getTableHeader().setReorderingAllowed(false);
        ridesTable.setAutoCreateRowSorter(true);

        tablePane = new JScrollPane(ridesTable);
        mainPanel.add(tablePane, BorderLayout.CENTER);
    }


    private void initRatingForm(Ride ride) {
        RateRideForm rateWindow = new RateRideForm(ride);
        rateWindow.rateWidnow.setVisible(true);
    }
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.setPreferredSize(new Dimension(1200, 600));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
